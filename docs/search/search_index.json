{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MDE Artifacts The MDE Artifacts project introduces a set of guidelines for artifact sharing specifically tailored to MDE research. These guidelines are structured as a list of factual questions that cover quality concerns which artifact authors, reviewers and Artifact Evaluation Committees (AEC) may ask about a research artifact. For each factual question, we also present a list of research best practices that can be used to address those respective factual question (i.e., quality concerns). Project layout This project is organized as follows: The 5w2h method - An introduction to the 5w2h method, a simple but useful framework for artifact authoring and reviewing. Guidelines for MDE artifact sharing - List of research best practices for MDE artifact sharing. Associated studies - List of research/case studies associated with this project.","title":"Home"},{"location":"#mde-artifacts","text":"The MDE Artifacts project introduces a set of guidelines for artifact sharing specifically tailored to MDE research. These guidelines are structured as a list of factual questions that cover quality concerns which artifact authors, reviewers and Artifact Evaluation Committees (AEC) may ask about a research artifact. For each factual question, we also present a list of research best practices that can be used to address those respective factual question (i.e., quality concerns).","title":"MDE Artifacts"},{"location":"#project-layout","text":"This project is organized as follows: The 5w2h method - An introduction to the 5w2h method, a simple but useful framework for artifact authoring and reviewing. Guidelines for MDE artifact sharing - List of research best practices for MDE artifact sharing. Associated studies - List of research/case studies associated with this project.","title":"Project layout"},{"location":"contactus/","text":"Contact us and Collaborate For more information or collaborations, feel free to contact one of the maintainers of this project: dr. Diego Damasceno <d.damasceno (at) cs (dot) ru (dot) nl> dr. Daniel Str\u00fcber <d.strueber (at) cs (dot) ru (dot) nl>","title":"Contact us"},{"location":"contactus/#contact-us-and-collaborate","text":"For more information or collaborations, feel free to contact one of the maintainers of this project: dr. Diego Damasceno <d.damasceno (at) cs (dot) ru (dot) nl> dr. Daniel Str\u00fcber <d.strueber (at) cs (dot) ru (dot) nl>","title":"Contact us and Collaborate"},{"location":"guidelines/","text":"The factual questions The list of research best practices What? What is it all about? The artifact shall have a name for reference The artifact shall indicate its context of development (e.g., domain, problem, project) The artifact shall indicate the main functionalities supported (e.g., language support, code generation, model analysis) The artifact shall indicate the relation with its respective paper What does it have? The artifact shall provide an overall description of its directory structure and content The artifact shall include everything required for replications (i.e., complete) The artifact shall include no more assets than necessary for replications (i.e., concise) The artifact shall include a preprint of its associated article What concepts and technologies underpin the artifact? The artifact shall indicate the theories that underpin its creation (e.g., formalisms, semantics) The artifact shall indicate the modeling languages used to develop it (e.g., UML, xtUML, SysML, BPMN) The artifact shall indicate the meta-modeling languages used to develop it (e.g., EMOF, CMOF, ECore/EMF, KM3) The artifact shall indicate the standards and/or specifications used to develop it (e.g., ISO, CMI, XMI, CWM, HUTN, JMI, DD, OCL) The artifact shall indicate the programming/markup language used to develop it The artifact shall indicate the libraries, dependencies, and frameworks used to develop it and their respective versions (e.g., Eclipse release) The artifact shall rely on open, well-maintained, and documented libraries or dependencies Why? Why it was created? The artifact shall report the motivation for its development The artifact shall report its objective/goal (e.g., verify claims, replicability, reusability, a whole new library/framework) The artifact shall indicate its advantages and/or novelty (e.g., algorithm, language, method) Where? Where is it hosted? The artifact shall be hosted in an open, public repository (e.g., GitHub, BitBucket, Zenodo, Figshare) The artifact shall be hosted in a repository indexed and findable by search engines (e.g., GitHub, BitBucket, Zenodo, Figshare) The artifact shall be archived for long-term, permanent access (e.g., Zenodo, Figshare) Where shall I cite? The artifact shall provide an explicit format for citation (e.g., in a CITATION or README file) The artifact shall provide citation information in a BibTeX format The artifact shall provide an URL for citation The artifact shall provide a DOI for citation Where to find related work? The artifact shall give credit to data obtained from other sources (e.g., authors, paper, repository, benchmark) The artifact shall provide references about key concepts (e.g., papers, surveys, wiki, reports) The artifact shall provide references to studies using it (e.g., known uses, integrated with) The artifact shall provide references to related projects The artifact shall provide references using in-code citation (e.g., code header) Who? Who could use it? The artifact shall be deposited under an explicit open license (e.g., reported in a LICENSE file) Files shall be made available using open/non-proprietary formats (e.g., JSON, open XML schema) The artifact shall indicate a list of potential users (e.g., professionals, researchers, industry sectors) The artifact shall provide a communication channel for interacting with the community (e.g., forum, mailing list, issue tracker, IRC, Slack, Discord) The artifact shall indicate the names of its authors The artifact shall indicate the institution of its authors The artifact shall indicate the contact details of its authors/collaborators (e.g., email address, ResearchGate, Linkedin, website) The artifact shall indicate the ORCID of its authors/collaborators The artifact shall indicate the level of experience of its authors/collaborators (e.g., bio, degree, position) The artifact shall indicate the funding agencies that supported the project (e.g., ERC, NWO, CNPq, DFG, EPSRC, NSF) When? When did changes happen? Changes to the artifact shall be tracked using version control (e.g., GitHub, GitLab, BitBucket) Changes to the artifact shall be small (e.g., conciseness, cohesion, clear edit) Changes to the artifact shall be explained (e.g., CHANGELOG, commit messages) The artifact shall allow referencing or retrieving specific versions using tags and/or release identifiers When do future changes shall happen? The artifact shall provide a timeline for future goals and planned updates (e.g., frequency, next steps, future work plans) The artifact shall be open for change requests and receiving feedback from users (e.g., bug fixes, pull requests, collaboration) How? How is it organized? Tabular data files shall follow analysis-friendly formats (e.g., the column is variable, the row is observation, data dictionary, the meaning of column/row headers) Files and folders shall have self-explaining names matching content, meaning, and human abstractions (e.g., doc/, src/, results/, src/, bin/) The artifact shall indicate best practices used (e.g., naming or code conventions, guidelines/checklists) Useful metadata shall be used as part of filenames for pattern matching (e.g., yyyymmdd), where meaningful The artifact shall be compliant with ICT accessibility standards (e.g., Section 508, WAI) The experiment workflow shall be broken-down into small and simple procedures to facilitate reuse (e.g., scripts, functions) The artifact shall include a website or wiki-page How to set up a running environment? The artifact shall provide instructions for downloading The artifact shall provide the open-source code The artifact shall provide a binary/compiled version The artifact shall provide a container for freezing dependencies and quickly setting up a running environment (e.g., VM, Docker) The artifact shall provide a step-by-step tutorial of how to build the source code The artifact compilation shall rely on build automation tools (e.g., make, ant) The artifact compilation shall rely on dependency management tools (e.g., maven, pip) The artifact shall provide instructions to install it How to get started? The artifact shall include instructions for running it on minimal test data (e.g., quick run, smoke testing) The artifact shall indicate the most relevant and interesting parts of the source code/artifact The artifact shall include step-by-step instructions for running it (e.g., README, PDF) The artifact shall include a video tutorial with the step-by-step for running it (e.g., Youtube, Vimeo) How to replicate the experiment? The artifact shall include the complete set of test models analyzed The artifact shall provide instructions for manual/automated pre-processing of raw data for experiments (e.g., bash, python, R script) The artifact shall provide instructions for manual/automated replication of the complete (or at least a subset) experiment as in the paper (e.g., bash, python, R script) The experiment workflow shall be fully automated (including raw data processing, experiment execution, figures plotting) The artifact shall include the experiment results shown in its associated paper in tabular and machine-readable format (e.g., .csv, .tab) The artifact shall include log files produced How to run the analysis of results? The artifact shall include scripts for the automated analysis of results as in the paper (e.g., R scripts, python scripts, Jupyter notebooks) The artifact shall include scripts for drawing figures and/or plots as in the paper (e.g., R scripts, python scripts, Jupyter notebooks) The artifact shall provide a clear description of the measurement procedures and metrics used in the paper How could it be repurposed? The artifact shall indicate suggestions for contributions (e.g., notes.txt, todo.txt, ways it could be repurposed, wishlist) The artifact documentation shall be designed considering users with minimal expertise The artifact shall provide details about ethical concerns in replications The artifact source code shall be documented (e.g., in-code comments, Javadoc) The artifact shall provide instructions for integration/chaining with commercial tools (e.g., Matlab, DOORS) The artifact shall report known issues, bugs, and limitations (e.g., issue tracker) How much/many? How many resources does it need? The artifact shall indicate the system and environment where it was successfully evaluated (e.g., OS, CPU, RAM, GPU, Disk) The artifact shall indicate the minimum system and environment requirements for usage (e.g., OS, CPU, RAM, GPU, Disk) The artifact shall indicate the skills and/or settings required for usage (e.g., team configuration, users' skills) The artifact shall indicate the approximate amount of time needed to replicate the experiment","title":"Guidelines for MDE artifacts"},{"location":"guidelines/#the-factual-questions","text":"","title":"The factual questions"},{"location":"guidelines/#the-list-of-research-best-practices","text":"","title":"The list of research best practices"},{"location":"guidelines/#what","text":"","title":"What?"},{"location":"guidelines/#what-is-it-all-about","text":"The artifact shall have a name for reference The artifact shall indicate its context of development (e.g., domain, problem, project) The artifact shall indicate the main functionalities supported (e.g., language support, code generation, model analysis) The artifact shall indicate the relation with its respective paper","title":"What is it all about?"},{"location":"guidelines/#what-does-it-have","text":"The artifact shall provide an overall description of its directory structure and content The artifact shall include everything required for replications (i.e., complete) The artifact shall include no more assets than necessary for replications (i.e., concise) The artifact shall include a preprint of its associated article","title":"What does it have?"},{"location":"guidelines/#what-concepts-and-technologies-underpin-the-artifact","text":"The artifact shall indicate the theories that underpin its creation (e.g., formalisms, semantics) The artifact shall indicate the modeling languages used to develop it (e.g., UML, xtUML, SysML, BPMN) The artifact shall indicate the meta-modeling languages used to develop it (e.g., EMOF, CMOF, ECore/EMF, KM3) The artifact shall indicate the standards and/or specifications used to develop it (e.g., ISO, CMI, XMI, CWM, HUTN, JMI, DD, OCL) The artifact shall indicate the programming/markup language used to develop it The artifact shall indicate the libraries, dependencies, and frameworks used to develop it and their respective versions (e.g., Eclipse release) The artifact shall rely on open, well-maintained, and documented libraries or dependencies","title":"What concepts and technologies underpin the artifact?"},{"location":"guidelines/#why","text":"","title":"Why?"},{"location":"guidelines/#why-it-was-created","text":"The artifact shall report the motivation for its development The artifact shall report its objective/goal (e.g., verify claims, replicability, reusability, a whole new library/framework) The artifact shall indicate its advantages and/or novelty (e.g., algorithm, language, method)","title":"Why it was created?"},{"location":"guidelines/#where","text":"","title":"Where?"},{"location":"guidelines/#where-is-it-hosted","text":"The artifact shall be hosted in an open, public repository (e.g., GitHub, BitBucket, Zenodo, Figshare) The artifact shall be hosted in a repository indexed and findable by search engines (e.g., GitHub, BitBucket, Zenodo, Figshare) The artifact shall be archived for long-term, permanent access (e.g., Zenodo, Figshare)","title":"Where is it hosted?"},{"location":"guidelines/#where-shall-i-cite","text":"The artifact shall provide an explicit format for citation (e.g., in a CITATION or README file) The artifact shall provide citation information in a BibTeX format The artifact shall provide an URL for citation The artifact shall provide a DOI for citation","title":"Where shall I cite?"},{"location":"guidelines/#where-to-find-related-work","text":"The artifact shall give credit to data obtained from other sources (e.g., authors, paper, repository, benchmark) The artifact shall provide references about key concepts (e.g., papers, surveys, wiki, reports) The artifact shall provide references to studies using it (e.g., known uses, integrated with) The artifact shall provide references to related projects The artifact shall provide references using in-code citation (e.g., code header)","title":"Where to find related work?"},{"location":"guidelines/#who","text":"","title":"Who?"},{"location":"guidelines/#who-could-use-it","text":"The artifact shall be deposited under an explicit open license (e.g., reported in a LICENSE file) Files shall be made available using open/non-proprietary formats (e.g., JSON, open XML schema) The artifact shall indicate a list of potential users (e.g., professionals, researchers, industry sectors) The artifact shall provide a communication channel for interacting with the community (e.g., forum, mailing list, issue tracker, IRC, Slack, Discord) The artifact shall indicate the names of its authors The artifact shall indicate the institution of its authors The artifact shall indicate the contact details of its authors/collaborators (e.g., email address, ResearchGate, Linkedin, website) The artifact shall indicate the ORCID of its authors/collaborators The artifact shall indicate the level of experience of its authors/collaborators (e.g., bio, degree, position) The artifact shall indicate the funding agencies that supported the project (e.g., ERC, NWO, CNPq, DFG, EPSRC, NSF)","title":"Who could use it?"},{"location":"guidelines/#when","text":"","title":"When?"},{"location":"guidelines/#when-did-changes-happen","text":"Changes to the artifact shall be tracked using version control (e.g., GitHub, GitLab, BitBucket) Changes to the artifact shall be small (e.g., conciseness, cohesion, clear edit) Changes to the artifact shall be explained (e.g., CHANGELOG, commit messages) The artifact shall allow referencing or retrieving specific versions using tags and/or release identifiers","title":"When did changes happen?"},{"location":"guidelines/#when-do-future-changes-shall-happen","text":"The artifact shall provide a timeline for future goals and planned updates (e.g., frequency, next steps, future work plans) The artifact shall be open for change requests and receiving feedback from users (e.g., bug fixes, pull requests, collaboration)","title":"When do future changes shall happen?"},{"location":"guidelines/#how","text":"","title":"How?"},{"location":"guidelines/#how-is-it-organized","text":"Tabular data files shall follow analysis-friendly formats (e.g., the column is variable, the row is observation, data dictionary, the meaning of column/row headers) Files and folders shall have self-explaining names matching content, meaning, and human abstractions (e.g., doc/, src/, results/, src/, bin/) The artifact shall indicate best practices used (e.g., naming or code conventions, guidelines/checklists) Useful metadata shall be used as part of filenames for pattern matching (e.g., yyyymmdd), where meaningful The artifact shall be compliant with ICT accessibility standards (e.g., Section 508, WAI) The experiment workflow shall be broken-down into small and simple procedures to facilitate reuse (e.g., scripts, functions) The artifact shall include a website or wiki-page","title":"How is it organized?"},{"location":"guidelines/#how-to-set-up-a-running-environment","text":"The artifact shall provide instructions for downloading The artifact shall provide the open-source code The artifact shall provide a binary/compiled version The artifact shall provide a container for freezing dependencies and quickly setting up a running environment (e.g., VM, Docker) The artifact shall provide a step-by-step tutorial of how to build the source code The artifact compilation shall rely on build automation tools (e.g., make, ant) The artifact compilation shall rely on dependency management tools (e.g., maven, pip) The artifact shall provide instructions to install it","title":"How to set up a running environment?"},{"location":"guidelines/#how-to-get-started","text":"The artifact shall include instructions for running it on minimal test data (e.g., quick run, smoke testing) The artifact shall indicate the most relevant and interesting parts of the source code/artifact The artifact shall include step-by-step instructions for running it (e.g., README, PDF) The artifact shall include a video tutorial with the step-by-step for running it (e.g., Youtube, Vimeo)","title":"How to get started?"},{"location":"guidelines/#how-to-replicate-the-experiment","text":"The artifact shall include the complete set of test models analyzed The artifact shall provide instructions for manual/automated pre-processing of raw data for experiments (e.g., bash, python, R script) The artifact shall provide instructions for manual/automated replication of the complete (or at least a subset) experiment as in the paper (e.g., bash, python, R script) The experiment workflow shall be fully automated (including raw data processing, experiment execution, figures plotting) The artifact shall include the experiment results shown in its associated paper in tabular and machine-readable format (e.g., .csv, .tab) The artifact shall include log files produced","title":"How to replicate the experiment?"},{"location":"guidelines/#how-to-run-the-analysis-of-results","text":"The artifact shall include scripts for the automated analysis of results as in the paper (e.g., R scripts, python scripts, Jupyter notebooks) The artifact shall include scripts for drawing figures and/or plots as in the paper (e.g., R scripts, python scripts, Jupyter notebooks) The artifact shall provide a clear description of the measurement procedures and metrics used in the paper","title":"How to run the analysis of results?"},{"location":"guidelines/#how-could-it-be-repurposed","text":"The artifact shall indicate suggestions for contributions (e.g., notes.txt, todo.txt, ways it could be repurposed, wishlist) The artifact documentation shall be designed considering users with minimal expertise The artifact shall provide details about ethical concerns in replications The artifact source code shall be documented (e.g., in-code comments, Javadoc) The artifact shall provide instructions for integration/chaining with commercial tools (e.g., Matlab, DOORS) The artifact shall report known issues, bugs, and limitations (e.g., issue tracker)","title":"How could it be repurposed?"},{"location":"guidelines/#how-muchmany","text":"","title":"How much/many?"},{"location":"guidelines/#how-many-resources-does-it-need","text":"The artifact shall indicate the system and environment where it was successfully evaluated (e.g., OS, CPU, RAM, GPU, Disk) The artifact shall indicate the minimum system and environment requirements for usage (e.g., OS, CPU, RAM, GPU, Disk) The artifact shall indicate the skills and/or settings required for usage (e.g., team configuration, users' skills) The artifact shall indicate the approximate amount of time needed to replicate the experiment","title":"How many resources does it need?"},{"location":"intro5w2h/","text":"Introduction According to the Project Management Institute (PMI), project quality management is a project management knowledge area which applies to all projects, regardless of the nature of their deliverables (i.e., artifacts). It aims at incorporating the organization\u2019s quality policy regarding planning, managing, and controlling project and product quality requirements, so that stakeholders\u2019 expectations are meet. Quality measures and techniques are specific to the type of artifact being produced and should be always identified and documented a priori . Plan quality management is the process of identifying quality requirements and/or standards for a project and its artifacts, and documenting means that a project shall demonstrate compliance with such quality requirements and/or standards. Failure to identify and meet quality requirements can have serious negative consequences for project stakeholders. In order to understand the concept of quality within the context of a specific project, there is an extensive toolbox of methods from which the 5w2h method constitutes a simple but powerful framework for research planning, analysis, or reviewing. The Origin The term \"5w2h\" is an abbreviation of seven keywords: W hat, W here, W hy, W ho, W hen, H ow, and H ow Much. This is a well-known method by journalists to gather and present categories of information to their audience. These categories should indicate the essential information that people may want to know about a news story. In computer science research, the 5w2h framework has been used in natural language processing, static software analysis, and systematic mapping studies. This method may be also known as the Five Ws or 5W1H . The Method In project quality management, the 5w2h method can be used for asking questions about a process or problem. The 5w2h structure forces managers to consider all aspects of the situation when analyzing a process for improvement opportunities, a problem is identified but must be better defined, planning a project or steps of a project, or reviewing a project after completion. According to Tague's book \"The Quality Toolbox\", the 5w2h method works as follows: Review the situation under study and the subject of the 5w2h is understood. Develop appropriate factual questions about the situation for each keyword. Answer each question. If answers are not known, create a plan for finding them. What you do next depends on your situation. If you are planning a project , your factual questions and answers should help form your plan. If you are analyzing a process for improvement opportunities , your questions and answers should lead you into additional questions about possible facts. If you are reviewing a completed project , your factual questions and answers should lead you into additional questions about modifying, expanding, or standardizing something.","title":"The 5w2h method"},{"location":"intro5w2h/#introduction","text":"According to the Project Management Institute (PMI), project quality management is a project management knowledge area which applies to all projects, regardless of the nature of their deliverables (i.e., artifacts). It aims at incorporating the organization\u2019s quality policy regarding planning, managing, and controlling project and product quality requirements, so that stakeholders\u2019 expectations are meet. Quality measures and techniques are specific to the type of artifact being produced and should be always identified and documented a priori . Plan quality management is the process of identifying quality requirements and/or standards for a project and its artifacts, and documenting means that a project shall demonstrate compliance with such quality requirements and/or standards. Failure to identify and meet quality requirements can have serious negative consequences for project stakeholders. In order to understand the concept of quality within the context of a specific project, there is an extensive toolbox of methods from which the 5w2h method constitutes a simple but powerful framework for research planning, analysis, or reviewing.","title":"Introduction"},{"location":"intro5w2h/#the-origin","text":"The term \"5w2h\" is an abbreviation of seven keywords: W hat, W here, W hy, W ho, W hen, H ow, and H ow Much. This is a well-known method by journalists to gather and present categories of information to their audience. These categories should indicate the essential information that people may want to know about a news story. In computer science research, the 5w2h framework has been used in natural language processing, static software analysis, and systematic mapping studies. This method may be also known as the Five Ws or 5W1H .","title":"The Origin"},{"location":"intro5w2h/#the-method","text":"In project quality management, the 5w2h method can be used for asking questions about a process or problem. The 5w2h structure forces managers to consider all aspects of the situation when analyzing a process for improvement opportunities, a problem is identified but must be better defined, planning a project or steps of a project, or reviewing a project after completion. According to Tague's book \"The Quality Toolbox\", the 5w2h method works as follows: Review the situation under study and the subject of the 5w2h is understood. Develop appropriate factual questions about the situation for each keyword. Answer each question. If answers are not known, create a plan for finding them. What you do next depends on your situation. If you are planning a project , your factual questions and answers should help form your plan. If you are analyzing a process for improvement opportunities , your questions and answers should lead you into additional questions about possible facts. If you are reviewing a completed project , your factual questions and answers should lead you into additional questions about modifying, expanding, or standardizing something.","title":"The Method"},{"location":"relwork/","text":"Damasceno and Str\u00fcber (2021) Title: \" Quality Guidelines for Research Artifacts in Model-Driven Engineering .\" Authors: Carlos Diego Nascimento Damasceno and Daniel Str\u00fcber Venue: MoDELS'21: ACM/IEEE 24th International Conference on Model Driven Engineering Languages and Systems Type: Full Research Paper Track: Foundations track Year: 2021 Research artifact: Zenodo: GitHub: damascenodiego/mdeartifacts.github.io xxx & yyy (2022)","title":"Associated studies"},{"location":"relwork/#damasceno-and-struber-2021","text":"Title: \" Quality Guidelines for Research Artifacts in Model-Driven Engineering .\" Authors: Carlos Diego Nascimento Damasceno and Daniel Str\u00fcber Venue: MoDELS'21: ACM/IEEE 24th International Conference on Model Driven Engineering Languages and Systems Type: Full Research Paper Track: Foundations track Year: 2021 Research artifact: Zenodo: GitHub: damascenodiego/mdeartifacts.github.io","title":"Damasceno and Str\u00fcber (2021)"},{"location":"relwork/#xxx-yyy-2022","text":"","title":"xxx &amp; yyy (2022)"}]}