,Participant comment,Keywords,,,
,Lost artifacts; No answer; Not enough information.,availability,communication with developers,lack of information,
,"After a few years, the evolution of languages and platforms that the artefacts were originally built upon.","compatibility (of languages, platforms, libraries)",,,
,"Given that we shared software artefacts, the challenge was in having a good and up-to-date online documentation that evolves with the software itself. We used the usual open source git-based and GitHub-based collaborative software development and continuous integration practices and tools for this purpose.",documentation,,,
,Version control,versioning,,,
,Textual description about an model can be useful to better explain the model and mitigating doubts.,lack of information,,,
,The artifact was not public available.,availability,,,
,Current tool versions not working with outdated data formats after short times,"compatibility (of languages, platforms, libraries)",,,
,Broken dependencies to other tools/libraries/packages.,dependencies,,,
,I couldn't find enough models while conducting my experiments,artifact discovery,,,
,1) Outdated Versions of Modeling Libraries: Often it is very hard to evaluate and possibly run the artifacts due to version conflicts.,"compatibility (of languages, platforms, libraries)",,,
,Lack of documentation Effort to make the artifact reusable Closed source code tools with low usability,documentation,reusability,usability,closed source tools
,"Deprecation of the underlying toolchain, the documentation of the tools in general and the lack of replication packages. The last is the biggest issue.",outdated technology,documentation,availability,
,Some material are not easy to follow and even the real material is shared by others auhtors.,documentation,,,
,"dependency version issues, academic proof of concept implementation that others want to reuse","compatibility (of languages, platforms, libraries)",dependencies ,reusability,
,"artifacts not meaningful standalone, external dependencies are often not explicitly listed dependencies and traceability among artifacts not explicit specific for UML: too many different variants, versions, tool-specific representations",lack of information,dependencies,technology heterogeneity,
,IP rights,IP,,,
,"Software that couldn't be found, compiled or run",availability,installation,,
,Technological mismatch Artifact's technology is not maintained / reused Insufficient documentation of artifact,technology heterogeneity,outdated technology,documentation,
,Compatibility issues due to versions Immaturity of the artifact (bugs etc) Undocumented limitations,"compatibility (of languages, platforms, libraries)",documentation,bugs,
,"Getting it right with the dependencies and their versions (EMF, Java, Ecore)",dependencies,"compatibility (of languages, platforms, libraries)",,
,- Dependencies (this is happening now less and less often thanks to devops tools) - Lack of documentation - Software updates that are incompatible with the original requirements needed to execute the artifacts,dependencies,documentation,"compatibility (of languages, platforms, libraries)",
,"incomplete artifacts, technical difficulties becauese of version conflicts and obsolete technologies",completeness,"compatibility (of languages, platforms, libraries)",outdated technology,
,"Insufficient guidelines on how to prepare the artifacts. In some cases, absence of a location provided to store the artifacts. In such cases I used a file server provided by my institution. Being contact by researchers interested in the artifacts a long time after they were published, in which case they were no longer available at the original publishing location.",lack of information,documentation,availability,
,Compatibility Problems in different Eclipse versions,"compatibility (of languages, platforms, libraries)",,,
,format of artifacts is in some version of a tool that is difficult to obtain,"availability (of tools, platforms, libraries)",,,
,Exchange format issues Quality of artifact is low Documentation is lacking or incomplete,exchange formats,quality,documentation,
,- artifact designed for a single short-term purpose but not for reuse - artifact unusable due evolution of underlying software - artifact unusable due to missing information (e.g. documentation) - artifact unusable due to incorrect behaviour (bugs) when used outside authors' cases (NB: this is not specific to MDE).,reusability,"compatibility (of languages, platforms, libraries)",documentation,bugs
,Artifacts are rather small toy examples than real-world case studies,lack of realistic models,,,
,- semantic and syntax not well defined - support software bugged or very difficult to use and install,lack of information,bugs,usability,installation
,"I can only report here about experiences of my PhD students. When they tried to reuse software artefacts, quite often they had technical problems like older versions, bugs, missing libraries, and so on","compatibility (of languages, platforms, libraries)",bugs,"availability (of tools, platforms, libraries)",
,No challenges,,,,
,"Software sharing: challenges in packaging software in a reusable form. Often, this can take significantly more time than producing the research and software in the first place. Support infrastructure for streamlining the required processes would be really helpful. Sharing of models etc: the special encoding required for many models can make it very difficult to package large artefact collections in a way that is easily inspectable by others.",reusability,exchange formats,,
,"Being MDE artifacts part of research projects, their obsolescence can be rapid and uncontrolled due to the variety of application domains for MDE and scarcity of working forces. From a research-wise point of view is more convenient a publication rather than the maintenance of MDE artifacts from previous publications.",maintenance,,,
,"Platform-specific issues for code (e.g., Linux vs Windows)",technology heterogeneity,,,
,"As with many academic projects, code is often part of a no longer maintained research project, often doesn't work anymore but the responsible persons have moved on (finished their PhD, changed research topic, ...), results are not reproducible.",maintenance,communication with developers,reproducibility,
,"Tooling that is easily (yet freely) available, stable, fast and ensures artifacts to be edited in the long-run.","availability (of tools, platforms, libraries)",,,
,"Majority of researchers did not respond to my requests. Sometimes the links provided in the paper were out of date, even for recent papers. Hosting of artifacts can be problematic if the size is too big. In my view, the entire emf ecosystem makes artifact distribution difficult because of how dependencies are handled in Eclipse.",communication with developers,availability,hosting,dependencies
,Installing and configuring the artifact Find documentation and examples about the artifac Communication with the research group (author) of the artifact,installation,documentation,examples,communication with developers
,Models are proprietary and there are restrictions I sharing. I put and work on open domain system models,exchange formats,restrictions,,
,"compatibility issues, different versions of tools, missing or uncomplete documentation","compatibility (of languages, platforms, libraries)",documentation,,
,"1. most often the artifacts are not well documented which make their reuse difficult. 2. most often the artifacts are not well structured/classified. This fact make the search on the needed software artifact difficult. Currently, there is no approach that can automatically classify the software artifacts automatically based on their intents.",documentation,reusability,structure,
,"no manuals, poor info for using and installing, undocumented features, lack of support and evolution",documentation,lack of information,,
,"Unclear versioning of artefacts (or their dependencies), difficulties in reproducing their exact setups, or incomplete/inconsistent artefacts (e.g. missing or misplaced files).","compatibility (of languages, platforms, libraries)",dependencies,reproducibility,completeness
,"The main challenges I faced were related to the platform, i.e., I developed a model transformation in Acceleo but they were not using that language. The other problem was about legal issues, once a researcher asked me to share an artifact that interfaced PLASMA model checker with a simulator, but I could not, since it was not allowed to share it.",technology heterogeneity,IP,,
,artifact and tool version conflicts usefulness of artifacts outside of their original use,"compatibility (of languages, platforms, libraries)",reusability,,
,Software platform boundaries Incompatible programming languages,technology heterogeneity,,,
,Getting to know about the structure of the model,structure,documentation,,
,"Many artifacts in this domain are part of a greater technological context or framework, so that direct reuse is only practical if one is working in the same context.",,,,
,Eclipse versions Missing dependencies,dependencies,,,
,"Sharing artifacts is an extra step that provides transparency and reproducibility, but finding the time to walk the extra mile of preparing and documenting the artifacts for external use can be challenging Actually finding interesting artifacts for your evaluation can be challenging sometimes!",effort,artifact discovery,,
,"With regard to the use of artifacts: -Missing or outdated documentation about setup and use -Incompatibility between different versions and tools. For example, some tools need Eclipse Neon to work, others need Eclipse Photon. Depending on the differences, one may need several Eclipse versions and sometimes different Java versions.",documentation,"compatibility (of languages, platforms, libraries)",,
,Eclipse setup issues,installation,,,
,One of the biggest challenges is standardization. A lot of tools rely on EMF but either do not work well with other tools (Xtext: wipes the EMF Registry) or use features that have not been properly developed and probably never will. This makes it quite challenging to share artifacts as we have experienced different behaviors on different platforms.,technology heterogeneity,standardisation,,
,"running their tools, availability / access to benchmarks",installation,availability,,
,Tools and artiracts require greater use and maturity,usability,maturity,,
,"Learning new languages, methods, and frameworks is very time consuming",technology heterogeneity,knowledge discrepancies,,
,Incompatible modeling languages; models that don't parse correctly; repositories that cease being supported; languages that become obsolete,"compatibility (of languages, platforms, libraries)",exchange formats,outdated technology,
,outdated dependencies and lake of proper installation / usage guide,dependencies,documentation,installation,
,Property rights,IP,,,
,"Evolution consequences: Shared models some years ago might not be possible to be loaded with current tools (e.g., metamodel has evolved, current tools evolved and they are no longer compatible so you need to take an ancient version of the tool incompatible with new functionalities you want to use) Lack of adoption of libraries: Libraries of models and model transformations have been developed in the last years, but I have doubts if they were successful or if they reached an acceptable level of adoption. The idea is not bad but I never used them. Lack of real or realistic models: Big models exist but in most of the cases they are incomplete (e.g., https://wiki.eclipse.org/Capella/Samples/IFE)","compatibility (of languages, platforms, libraries)",standardisation,lack of realistic models,
,"Bad documentation, version conflicts, lack of semantics",documentation,"compatibility (of languages, platforms, libraries)",lack of information,
,availability interoperability unmaintainability,availability,"compatibility (of languages, platforms, libraries)",maintenance,
,"Long-term reusability requires more than model repositories. A complete VM/Docker image is required, which is memory intensive and imposes considerable efforts in production.",reusability,effort,,
,"It was a Ph.D. student who wanted to use my (meta) models. He/She had severe trouble in setting up the infrastructure (Eclipse Ecore). Additionally, it seemed to be a real issue in understanding how to work with models from the Java perspective (""that are just classes and objects, where is the model?"").",installation,knowledge discrepancies,,
,Adequate Documentation. Versioning differences (compatibility).,documentation,"compatibility (of languages, platforms, libraries)",,
,Dependencies of the technological platform,dependencies,,,